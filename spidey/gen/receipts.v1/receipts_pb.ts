// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=.ts"
// @generated from file receipts.v1/receipts.proto (package receipts.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum receipts.v1.ListReceiptsSince
 */
export enum ListReceiptsSince {
  /**
   * @generated from enum value: LIST_RECEIPTS_SINCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LIST_RECEIPTS_SINCE_CURRENT_MONTH = 1;
   */
  CURRENT_MONTH = 1,

  /**
   * @generated from enum value: LIST_RECEIPTS_SINCE_PREVIOUS_MONTH = 2;
   */
  PREVIOUS_MONTH = 2,

  /**
   * @generated from enum value: LIST_RECEIPTS_SINCE_ALL_TIME = 3;
   */
  ALL_TIME = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListReceiptsSince)
proto3.util.setEnumType(ListReceiptsSince, "receipts.v1.ListReceiptsSince", [
  { no: 0, name: "LIST_RECEIPTS_SINCE_UNSPECIFIED" },
  { no: 1, name: "LIST_RECEIPTS_SINCE_CURRENT_MONTH" },
  { no: 2, name: "LIST_RECEIPTS_SINCE_PREVIOUS_MONTH" },
  { no: 3, name: "LIST_RECEIPTS_SINCE_ALL_TIME" },
]);

/**
 * @generated from enum receipts.v1.ReceiptStatus
 */
export enum ReceiptStatus {
  /**
   * @generated from enum value: RECEIPT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RECEIPT_STATUS_PENDING_REVIEW = 1;
   */
  PENDING_REVIEW = 1,

  /**
   * @generated from enum value: RECEIPT_STATUS_REVIEWED = 2;
   */
  REVIEWED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ReceiptStatus)
proto3.util.setEnumType(ReceiptStatus, "receipts.v1.ReceiptStatus", [
  { no: 0, name: "RECEIPT_STATUS_UNSPECIFIED" },
  { no: 1, name: "RECEIPT_STATUS_PENDING_REVIEW" },
  { no: 2, name: "RECEIPT_STATUS_REVIEWED" },
]);

/**
 * @generated from message receipts.v1.CreateReceiptsRequest
 */
export class CreateReceiptsRequest extends Message<CreateReceiptsRequest> {
  /**
   * @generated from field: repeated bytes receipt_files = 1;
   */
  receiptFiles: Uint8Array[] = [];

  constructor(data?: PartialMessage<CreateReceiptsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.CreateReceiptsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "receipt_files", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateReceiptsRequest {
    return new CreateReceiptsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateReceiptsRequest {
    return new CreateReceiptsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateReceiptsRequest {
    return new CreateReceiptsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateReceiptsRequest | PlainMessage<CreateReceiptsRequest> | undefined, b: CreateReceiptsRequest | PlainMessage<CreateReceiptsRequest> | undefined): boolean {
    return proto3.util.equals(CreateReceiptsRequest, a, b);
  }
}

/**
 * @generated from message receipts.v1.CreateReceiptsResponse
 */
export class CreateReceiptsResponse extends Message<CreateReceiptsResponse> {
  /**
   * @generated from field: repeated receipts.v1.Receipt receipts = 1;
   */
  receipts: Receipt[] = [];

  constructor(data?: PartialMessage<CreateReceiptsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.CreateReceiptsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "receipts", kind: "message", T: Receipt, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateReceiptsResponse {
    return new CreateReceiptsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateReceiptsResponse {
    return new CreateReceiptsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateReceiptsResponse {
    return new CreateReceiptsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateReceiptsResponse | PlainMessage<CreateReceiptsResponse> | undefined, b: CreateReceiptsResponse | PlainMessage<CreateReceiptsResponse> | undefined): boolean {
    return proto3.util.equals(CreateReceiptsResponse, a, b);
  }
}

/**
 * @generated from message receipts.v1.UpdateReceiptRequest
 */
export class UpdateReceiptRequest extends Message<UpdateReceiptRequest> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: optional string vendor = 2;
   */
  vendor?: string;

  /**
   * @generated from field: optional bool pending_review = 3;
   */
  pendingReview?: boolean;

  /**
   * @generated from field: optional google.protobuf.Timestamp date = 4;
   */
  date?: Timestamp;

  constructor(data?: PartialMessage<UpdateReceiptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.UpdateReceiptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "vendor", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "pending_review", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "date", kind: "message", T: Timestamp, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateReceiptRequest {
    return new UpdateReceiptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateReceiptRequest {
    return new UpdateReceiptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateReceiptRequest {
    return new UpdateReceiptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateReceiptRequest | PlainMessage<UpdateReceiptRequest> | undefined, b: UpdateReceiptRequest | PlainMessage<UpdateReceiptRequest> | undefined): boolean {
    return proto3.util.equals(UpdateReceiptRequest, a, b);
  }
}

/**
 * @generated from message receipts.v1.UpdateReceiptResponse
 */
export class UpdateReceiptResponse extends Message<UpdateReceiptResponse> {
  constructor(data?: PartialMessage<UpdateReceiptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.UpdateReceiptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateReceiptResponse {
    return new UpdateReceiptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateReceiptResponse {
    return new UpdateReceiptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateReceiptResponse {
    return new UpdateReceiptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateReceiptResponse | PlainMessage<UpdateReceiptResponse> | undefined, b: UpdateReceiptResponse | PlainMessage<UpdateReceiptResponse> | undefined): boolean {
    return proto3.util.equals(UpdateReceiptResponse, a, b);
  }
}

/**
 * @generated from message receipts.v1.DeleteReceiptRequest
 */
export class DeleteReceiptRequest extends Message<DeleteReceiptRequest> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<DeleteReceiptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.DeleteReceiptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteReceiptRequest {
    return new DeleteReceiptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteReceiptRequest {
    return new DeleteReceiptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteReceiptRequest {
    return new DeleteReceiptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteReceiptRequest | PlainMessage<DeleteReceiptRequest> | undefined, b: DeleteReceiptRequest | PlainMessage<DeleteReceiptRequest> | undefined): boolean {
    return proto3.util.equals(DeleteReceiptRequest, a, b);
  }
}

/**
 * @generated from message receipts.v1.DeleteReceiptResponse
 */
export class DeleteReceiptResponse extends Message<DeleteReceiptResponse> {
  constructor(data?: PartialMessage<DeleteReceiptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.DeleteReceiptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteReceiptResponse {
    return new DeleteReceiptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteReceiptResponse {
    return new DeleteReceiptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteReceiptResponse {
    return new DeleteReceiptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteReceiptResponse | PlainMessage<DeleteReceiptResponse> | undefined, b: DeleteReceiptResponse | PlainMessage<DeleteReceiptResponse> | undefined): boolean {
    return proto3.util.equals(DeleteReceiptResponse, a, b);
  }
}

/**
 * @generated from message receipts.v1.ListReceiptsRequest
 */
export class ListReceiptsRequest extends Message<ListReceiptsRequest> {
  /**
   * @generated from field: receipts.v1.ListReceiptsSince since = 1;
   */
  since = ListReceiptsSince.UNSPECIFIED;

  /**
   * @generated from field: receipts.v1.ReceiptStatus status = 2;
   */
  status = ReceiptStatus.UNSPECIFIED;

  constructor(data?: PartialMessage<ListReceiptsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.ListReceiptsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "since", kind: "enum", T: proto3.getEnumType(ListReceiptsSince) },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(ReceiptStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListReceiptsRequest {
    return new ListReceiptsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListReceiptsRequest {
    return new ListReceiptsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListReceiptsRequest {
    return new ListReceiptsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListReceiptsRequest | PlainMessage<ListReceiptsRequest> | undefined, b: ListReceiptsRequest | PlainMessage<ListReceiptsRequest> | undefined): boolean {
    return proto3.util.equals(ListReceiptsRequest, a, b);
  }
}

/**
 * @generated from message receipts.v1.Receipt
 */
export class Receipt extends Message<Receipt> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: receipts.v1.ReceiptStatus status = 2;
   */
  status = ReceiptStatus.UNSPECIFIED;

  /**
   * @generated from field: string vendor = 3;
   */
  vendor = "";

  /**
   * @generated from field: google.protobuf.Timestamp date = 4;
   */
  date?: Timestamp;

  /**
   * @generated from field: repeated receipts.v1.Expense expenses = 5;
   */
  expenses: Expense[] = [];

  constructor(data?: PartialMessage<Receipt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.Receipt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(ReceiptStatus) },
    { no: 3, name: "vendor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "date", kind: "message", T: Timestamp },
    { no: 5, name: "expenses", kind: "message", T: Expense, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Receipt {
    return new Receipt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Receipt {
    return new Receipt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Receipt {
    return new Receipt().fromJsonString(jsonString, options);
  }

  static equals(a: Receipt | PlainMessage<Receipt> | undefined, b: Receipt | PlainMessage<Receipt> | undefined): boolean {
    return proto3.util.equals(Receipt, a, b);
  }
}

/**
 * @generated from message receipts.v1.Expense
 */
export class Expense extends Message<Expense> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: google.protobuf.Timestamp date = 2;
   */
  date?: Timestamp;

  /**
   * @generated from field: string category = 3;
   */
  category = "";

  /**
   * @generated from field: string subcategory = 4;
   */
  subcategory = "";

  /**
   * @generated from field: string description = 5;
   */
  description = "";

  /**
   * @generated from field: uint64 amount = 6;
   */
  amount = protoInt64.zero;

  constructor(data?: PartialMessage<Expense>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.Expense";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "date", kind: "message", T: Timestamp },
    { no: 3, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subcategory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Expense {
    return new Expense().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Expense {
    return new Expense().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Expense {
    return new Expense().fromJsonString(jsonString, options);
  }

  static equals(a: Expense | PlainMessage<Expense> | undefined, b: Expense | PlainMessage<Expense> | undefined): boolean {
    return proto3.util.equals(Expense, a, b);
  }
}

/**
 * @generated from message receipts.v1.ListReceiptsResponse
 */
export class ListReceiptsResponse extends Message<ListReceiptsResponse> {
  /**
   * @generated from field: repeated receipts.v1.Receipt receipts = 1;
   */
  receipts: Receipt[] = [];

  constructor(data?: PartialMessage<ListReceiptsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.ListReceiptsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "receipts", kind: "message", T: Receipt, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListReceiptsResponse {
    return new ListReceiptsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListReceiptsResponse {
    return new ListReceiptsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListReceiptsResponse {
    return new ListReceiptsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListReceiptsResponse | PlainMessage<ListReceiptsResponse> | undefined, b: ListReceiptsResponse | PlainMessage<ListReceiptsResponse> | undefined): boolean {
    return proto3.util.equals(ListReceiptsResponse, a, b);
  }
}

/**
 * @generated from message receipts.v1.GetReceiptRequest
 */
export class GetReceiptRequest extends Message<GetReceiptRequest> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<GetReceiptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.GetReceiptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetReceiptRequest {
    return new GetReceiptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetReceiptRequest {
    return new GetReceiptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetReceiptRequest {
    return new GetReceiptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetReceiptRequest | PlainMessage<GetReceiptRequest> | undefined, b: GetReceiptRequest | PlainMessage<GetReceiptRequest> | undefined): boolean {
    return proto3.util.equals(GetReceiptRequest, a, b);
  }
}

/**
 * @generated from message receipts.v1.GetReceiptResponse
 */
export class GetReceiptResponse extends Message<GetReceiptResponse> {
  /**
   * @generated from field: receipts.v1.FullReceipt receipt = 1;
   */
  receipt?: FullReceipt;

  constructor(data?: PartialMessage<GetReceiptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.GetReceiptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "receipt", kind: "message", T: FullReceipt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetReceiptResponse {
    return new GetReceiptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetReceiptResponse {
    return new GetReceiptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetReceiptResponse {
    return new GetReceiptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetReceiptResponse | PlainMessage<GetReceiptResponse> | undefined, b: GetReceiptResponse | PlainMessage<GetReceiptResponse> | undefined): boolean {
    return proto3.util.equals(GetReceiptResponse, a, b);
  }
}

/**
 * @generated from message receipts.v1.FullReceipt
 */
export class FullReceipt extends Message<FullReceipt> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: receipts.v1.ReceiptStatus status = 2;
   */
  status = ReceiptStatus.UNSPECIFIED;

  /**
   * @generated from field: string vendor = 3;
   */
  vendor = "";

  /**
   * @generated from field: google.protobuf.Timestamp date = 4;
   */
  date?: Timestamp;

  /**
   * @generated from field: bytes file = 5;
   */
  file = new Uint8Array(0);

  /**
   * @generated from field: repeated receipts.v1.Expense expenses = 6;
   */
  expenses: Expense[] = [];

  constructor(data?: PartialMessage<FullReceipt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receipts.v1.FullReceipt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(ReceiptStatus) },
    { no: 3, name: "vendor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "date", kind: "message", T: Timestamp },
    { no: 5, name: "file", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "expenses", kind: "message", T: Expense, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FullReceipt {
    return new FullReceipt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FullReceipt {
    return new FullReceipt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FullReceipt {
    return new FullReceipt().fromJsonString(jsonString, options);
  }

  static equals(a: FullReceipt | PlainMessage<FullReceipt> | undefined, b: FullReceipt | PlainMessage<FullReceipt> | undefined): boolean {
    return proto3.util.equals(FullReceipt, a, b);
  }
}

