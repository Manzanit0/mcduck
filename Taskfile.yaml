version: "3"

tasks:
  up:
    desc: Runs the local docker-compose.yaml file while injecting some environment variables from the cloud environment, namely the PARSER connection details.
    silent: false
    vars:
      PARSER_HOST:
        sh: railway variables -s mcduck --json | jq -r .PARSER_HOST
      OTEL_EXPORTER_OTLP_ENDPOINT:
        sh: railway variables -s mcduck --json | jq -r .OTEL_EXPORTER_OTLP_ENDPOINT
      OTEL_EXPORTER_OTLP_HEADERS:
        sh: railway variables -s mcduck --json | jq -r .OTEL_EXPORTER_OTLP_HEADERS
    cmd: |
      OTEL_EXPORTER_OTLP_ENDPOINT={{.OTEL_EXPORTER_OTLP_ENDPOINT}} \
      OTEL_EXPORTER_OTLP_HEADERS={{.OTEL_EXPORTER_OTLP_HEADERS}} \
      PARSER_HOST={{.PARSER_HOST}} \
      docker compose up

  pgcli:
    desc: Connects to the local Docker postgres database via "pgcli"
    cmds:
      - pgcli "postgresql://root:password@localhost:5431/mcduck_db"

  deploy:
    desc: Deploys the local workspace version of the code of all services to railway.app
    prompt: Are you sure you want to deploy to railway.app?
    cmds:
      - railway up -s mcduck --detach
      - railway up -s tgram-bot --detach
      - railway up -s parser --detach

  rw-pgcli:
    desc: Connects to the railway.app cloud postgres database via "pgcli"
    vars:
      DATABASE_URL:
        sh: railway variables -s mcduck --json | jq -r .DATABASE_URL
    cmds:
      - pgcli "{{.DATABASE_URL}}"

  rw-migrate:
    desc: Runs migrations in the railway.app cloud environment.
    prompt: Are you sure you want to run migrations in the cloud?
    silent: false
    vars:
      PGHOST:
        sh: railway variables -s mcduck --json | jq -r .PGHOST
      PGPORT:
        sh: railway variables -s mcduck --json | jq -r .PGPORT
      PGDATABASE:
        sh: railway variables -s mcduck --json | jq -r .PGDATABASE
      PGUSER:
        sh: railway variables -s mcduck --json | jq -r .PGUSER
      PGPASSWORD:
        sh: railway variables -s mcduck --json | jq -r .PGPASSWORD
    cmds:
      - |
        docker run --rm -v `pwd`/migrations:/flyway/sql flyway/flyway:7.14.0 \
            -url="jdbc:postgresql://{{.PGHOST}}:{{.PGPORT}}/{{.PGDATABASE}}" \
            -user="{{.PGUSER}}" \
            -password="{{.PGPASSWORD}}" \
            -schemas=public \
            -connectRetries=60 \
            migrate
  rw-repair:
    desc: Repairs migrations in the railway.app cloud environment.
    prompt: Are you sure you want to repair migrations in the cloud?
    silent: false
    vars:
      PGHOST:
        sh: railway variables -s mcduck --json | jq -r .PGHOST
      PGPORT:
        sh: railway variables -s mcduck --json | jq -r .PGPORT
      PGDATABASE:
        sh: railway variables -s mcduck --json | jq -r .PGDATABASE
      PGUSER:
        sh: railway variables -s mcduck --json | jq -r .PGUSER
      PGPASSWORD:
        sh: railway variables -s mcduck --json | jq -r .PGPASSWORD
    cmds:
      - |
        docker run --rm -v `pwd`/migrations:/flyway/sql flyway/flyway:7.14.0 \
            -url="jdbc:postgresql://{{.PGHOST}}:{{.PGPORT}}/{{.PGDATABASE}}" \
            -user="{{.PGUSER}}" \
            -password="{{.PGPASSWORD}}" \
            -schemas=public \
            -connectRetries=60 \
            repair
