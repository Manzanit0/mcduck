services:
  service:
    image: cosmtrek/air
    working_dir: /app
    ports:
      - 8080:8080
    environment:
      - PGUSER=root
      - PGPASSWORD=password
      - PGDATABASE=mcduck_db
      - PGHOST=postgresql
      - PGPORT=5432
      - INVX_HOST=${INVX_HOST}
      - INVX_AUTH_TOKEN=${INVX_AUTH_TOKEN}
      - OTEL_EXPORTER_OTLP_ENDPOINT=179a673634434f80a47b5f70a137ea24.apm.us-central1.gcp.cloud.es.io:443
      - OTEL_EXPORTER_OTLP_HEADERS=Authorization=Bearer ih1At6THjsYkT4ojZF
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_RESOURCE_ATTRIBUTES="service.name=<app-name>,service.version=<app-version>,deployment.environment=production"
    volumes:
      - ./:/app
    networks:
      - mcduck

  postgresql:
    image: postgres:13-alpine
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "postgres",
          "-U",
          "root"
        ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    ports:
      - "5431:5432"
    volumes:
      - ./scripts/db:/docker-entrypoint-initdb.d/
    networks:
      - mcduck

  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://postgresql:5432/mcduck_db -schemas=public -user=docker -password=123 -connectRetries=60 migrate
    restart: on-failure
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      - postgresql
    networks:
      - mcduck

networks:
  mcduck:
    driver: bridge
